
function Number_parse(val: number) :: text:
  set {_val} to "%{_val}%"
  set {_val::*} to ({_val} split by ".")
  if length of {_val::1} > 3:
    if {_val::2} is set:
      return "%Number_parse(first length of {_val::} - 3 characters of {_val::1})%,%last 3 characters of {_val::1}%.%{_val::2}%"
    return "%number_Parse(first length of {_val::1} - 3 characters of {_val::1})%,%last 3 characters of {_val::1}%"
  return {_val}

function Number_format(n: number) :: text:
	set {_data} to "TRD,42|DUO,39|UND,36|DC,33|NO,30|OC,27|SP,24|SX,21|QT,18|Q,15|T,12|B,9|M,6|k,3"
	loop split {_data} at "|":
		set {_s::*} to split loop-value at ","
		{_n} >= 10 ^ {_s::2} parsed as number
		return "%{_n} / 10 ^ {_s::2} parsed as number%%{_s::1}%"
	return "%{_n}%"