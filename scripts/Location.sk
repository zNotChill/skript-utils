
# @name Location_getExtremes
# @description Gets the extremes of two locations
#
# @param {location} pos1 - The first position
# @param {location} pos2 - The second position
# @returns {locations} - The lowest and highest corners

function Location_getExtremes(pos1: location, pos2: location) :: locations:
  set {_lowestCorner} to {_pos1}
  set {_highestCorner} to {_pos2}
  if y coord of {_pos2} < y coord of {_pos1}:
    set {_lowestCorner} to {_pos2}
    set {_highestCorner} to {_pos1}
  return {_lowestCorner}, {_highestCorner}

# @name Location_checkAABB
# @description Checks if a location is within an AABB
#
# @param {location} loc - The location to check
# @param {location} corner1 - The first corner of the AABB
# @param {location} corner2 - The second corner of the AABB
# @returns {boolean} - Whether the location is within the AABB

function Location_checkAABB(loc: location, corner1: location, corner2: location) :: boolean:
  set {_extremes::*} to getExtremes({_corner1}, {_corner2})
  set {_lowest} to {_extremes::1}
  set {_highest} to {_extremes::2}
  if:
    x coord of {_loc} >= x coord of {_lowest}
    x coord of {_loc} <= x coord of {_highest}
    y coord of {_loc} >= y coord of {_lowest}
    y coord of {_loc} <= y coord of {_highest}
    z coord of {_loc} >= z coord of {_lowest}
    z coord of {_loc} <= z coord of {_highest}
  then:
    return true
  return false